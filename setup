#/bin/bash

USER=proactive
PASS='$1$$5MIRDEBG29XfuMhju0UWl/' # crypt('community1')
CONFIGXMLBASE=config-base.xml
CONFIGXMLOUT=config.xml
CONFIGXMLTEMP=configa.xml
PROACTIVEZIP='/tmp/ProActiveScheduling-3.1.2_worker(FUT).zip'

assertnotempty(){
	# $1 variable $2 errormessageifempty
	# assert the variable is not empty
	if [ "$1" == '' ]
	then
		echo $2 
		exit 1
	fi
}

checkuser(){
	# $1 USER $2 PASS

	set +e 
	OUTPUT=$(id $1)
	CODEOUTPUT=$?
	set -e 

        if [ "$CODEOUTPUT" == '0' ]
        then
		echo User $USER already exists, creation will be skipped.
	else
		echo User $USER DOES NOT exist, creating...
		createuser $USER $PASS
	fi	
}

createuser(){
	# $1 USER $2 PASS
	echo Creating user $1...
	sudo useradd -d /home/$1 -m -s /bin/bash $1 --password $2
	echo Done.
}

checkproactive(){
	# $1 PROACTIVEZIP
        if [ "$1" == '' ]
	then
		echo "ERROR: ProActive Scheduling Resourcing zip file not provided."
		exit 1
	else
		echo "Using the following ProActive Scheduling Resourcing zip file: $1"
		unzip $1 -d $CURRDIR/proactive

		BTEMP=$(find $CURRDIR/proactive -name 'LICENSE_EXCEPTION.txt')
		export BTEMP2=$(dirname $BTEMP)
		export PROACTIVE_HOME=$(readlink -e $BTEMP2)
		echo PROACTIVE_HOME found: $PROACTIVE_HOME

		if [ -e "$PROACTIVE_HOME/bin/unix/rm-start-node" ]
		then
			echo "PROACTIVE_HOME checked."
		else
			echo "ERROR: PROACTIVE_HOME does NOT SEEM to be correct, no $PROACTIVE_HOME/bin/unix/rm-start-node found."
			exit 1
		fi
	fi
}

checkjava(){
	# $1 JAVA_HOME
        if [ "$1" == '' ]
	then
		echo "ERROR: environment variable JAVA_HOME is not set. Set it to continue."
		exit 1
	else
		echo "JAVA_HOME is $JAVA_HOME"
		if [ -e "$JAVA_HOME/bin/java" ]
		then
			echo "JAVA_HOME checked."
		else
			echo "ERROR: JAVA_HOME does NOT SEEM to be correct, no $JAVA_HOME/bin/java found."
			exit 1
		fi
	fi
}

setupconfigxml(){
	# $1 JAVA_HOME $2 PROACTIVEHOME $3 CREDENTIAL
	cp $CURRDIR/$CONFIGXMLBASE $CURRDIR/$CONFIGXMLOUT 

	JAVAHOMEA=$(     echo "$1" | sed 's/(/\\\(/g' | sed 's/)/\\\)/g'| sed 's/\//\\\//g')
	PROACTIVEHOMEA=$(echo "$2" | sed 's/(/\\\(/g' | sed 's/)/\\\)/g'| sed 's/\//\\\//g')
	CREDENTIALA=$(   echo "$3" | sed 's/(/\\\(/g' | sed 's/)/\\\)/g'| sed 's/\//\\\//g')

	echo $JAVAHOMEA
	echo $PROACTIVEHOMEA
	echo $CREDENTIALA

	sed "s/JAVAHOMEXXX/$JAVAHOMEA/g"           "$CURRDIR/$CONFIGXMLOUT" > "$CURRDIR/$CONFIGXMLTEMP"
	cp "$CURRDIR/$CONFIGXMLTEMP" "$CURRDIR/$CONFIGXMLOUT"
	sed "s/PROACTIVEHOMEXXX/$PROACTIVEHOMEA/g" "$CURRDIR/$CONFIGXMLOUT" > "$CURRDIR/$CONFIGXMLTEMP"
	cp "$CURRDIR/$CONFIGXMLTEMP" "$CURRDIR/$CONFIGXMLOUT"
	sed "s/CREDENTIALXXX/$CREDENTIALA/g"       "$CURRDIR/$CONFIGXMLOUT" > "$CURRDIR/$CONFIGXMLTEMP"
	cp "$CURRDIR/$CONFIGXMLTEMP" "$CURRDIR/$CONFIGXMLOUT"
}

set -e 

export CURRDIR=$(dirname $0)
export CURRLINUXDIST=$(cat /etc/issue)
export CURRUNAME=$(uname -a)

echo "This script will configure the standalone version of the ProActive Agent for Linux."

echo Current directory is $CURRDIR
echo Current Linux distribution is $CURRLINUXDIST
echo Current uname is $CURRUNAME

echo "Checking if user $USER is created, or create if needed..."
checkuser "$USER" "$PASS"

echo "Checking if JAVA_HOME is set..."
checkjava "$JAVA_HOME" 

echo "Downloading ProActive Scheduling Resourcing..."
echo "   Skipping this... ZIP file already in: $PROACTIVEZIP"

echo "Inflating ProActive Scheduling Resourcing..."
checkproactive $PROACTIVEZIP

echo "Setting up JAVA_HOME, PROACTIVE_HOME and CREDENTIAL tags in ProActive Agent file config.xml."
echo "   Using:"
echo "      JAVA_HOME        $JAVA_HOME"
echo "      PROACTIVE_HOME   $PROACTIVE_HOME"
echo "      CREDENTIAL       $CREDENTIAL"

assertnotempty "$JAVA_HOME"      "ERROR: environment variable JAVA_HOME not set."
assertnotempty "$PROACTIVE_HOME" "ERROR: environment variable PROACTIVE_HOME not set."
assertnotempty "$CREDENTIAL"     "ERROR: environment variable CREDENTIAL not set."

setupconfigxml "$JAVA_HOME" "$PROACTIVE_HOME" "$CREDENTIAL"

echo "Starting the agent..."

