#/bin/bash

export PAUSER='proactive'
export PAPASS='$1$$5MIRDEBG29XfuMhju0UWl/' # crypt('community1')
export PAGROUP='proactivegroup'
export DESTDIRSCHEDULING="proactive-scheduling/"

CONFIGXMLBASE=config-base.xml
CONFIGXMLOUT=config.xml
PROACTIVEZIP='proactive/proactive.zip'

checkcurrdir(){ 
	#1 CURRDIR
	if [ -e $CURRDIR/proactive-agent ]
	then
		echo "Current directory checked."
	else
		echo "ERROR: please go to the root of the project before running the script."
		exit 1
	fi 
}

checkifroot(){
	LUID=$(id -u)
	if [[ $LUID -ne 0 ]]; then
		echo "This script must be run as root"
		exit 1
	fi
}

assertnotempty(){
	# $1 variable $2 errormessageifempty
	# assert the variable is not empty
	if [ -z "$1" ]
	then
		echo $2 
		exit 1
	fi
}

setupuser(){
	# $1 PAUSER $2 PAPASS

	set +e 
	OUTPUT=$(id $1)
	CODEOUTPUT=$?
	set -e 

        if [ "$CODEOUTPUT" -eq 0 ]
        then
		echo "User $1 already exists."
	else
		echo "User $1 DOES NOT exist, creating..."
		createuser "$1" "$2"
	fi	
}

setupgroup(){
	# $1 PAGROUP $2 USER 

        if [ $(egrep -i "^$1" /etc/group) ]
        then
		echo "Group $1 already exists."
	else
		echo "Group $1 DOES NOT exist, creating..."
		echo "Creating group $1..."
		groupadd $1 
		echo "Adding user $2 to group $1 ..."
		usermod -G $1 $2
		#useradd -G $1 $2 
		echo "Adding user $SUDO_USER to group $1 ..."
		usermod -G $1 $SUDO_USER
		#useradd -G $1 $SUDO_USER 
	fi	
}

createuser(){
	# $1 PAUSER $2 PASS
	echo "Creating user $1..."
	useradd -m -s /bin/bash $1 --password $2
	echo "Done."
}

createdir(){
	mkdir -p $1
	chown $PAUSER $1
}

inflateandcheckproactive(){
	# $1 PROACTIVEZIP $2 DESTDIR
        if [ -z "$1" ]
	then
		echo "ERROR: ProActive Scheduling Resourcing zip file not provided."
		exit 1
	else
		echo "Looking for ProActive Scheduling Resourcing installations in $2..."
		if [ $(find $2 -name "rm-start-node") ]
		then 
			echo "Found already an installation of ProActive in $2. Skipping inflating: $1 "
		else
			echo "Using the following ProActive Scheduling Resourcing zip file: $1"
			sudo -u "$PAUSER" unzip "$1" -d "$2"
			chown -R :"$PAGROUP" "$2"
		fi

		BTEMP=$(find $2 -name 'LICENSE_EXCEPTION.txt')
		export BTEMP2=$(dirname $BTEMP)
		export PROACTIVE_HOME=$(readlink -e $BTEMP2)
		echo PROACTIVE_HOME found: $PROACTIVE_HOME

		if [ -e "$PROACTIVE_HOME/bin/unix/rm-start-node" ]
		then
			echo "PROACTIVE_HOME checked."
		else
			echo "ERROR: PROACTIVE_HOME does NOT SEEM to be correct, no $PROACTIVE_HOME/bin/unix/rm-start-node found."
			exit 1
		fi
	fi
}

checkjava(){
	# $1 JAVA_HOME
        if [ -z "$1" ]
	then
		echo "ERROR: environment variable JAVA_HOME is not set. Set it to continue."
		exit 1
	else
		echo "JAVA_HOME is $JAVA_HOME"
		if [ -e "$JAVA_HOME/bin/java" ]
		then
			echo "JAVA_HOME checked."
		else
			echo "ERROR: JAVA_HOME does NOT SEEM to be correct, no $JAVA_HOME/bin/java found."
			exit 1
		fi
	fi
}

setupconfigxml(){
	# $1 JAVA_HOME $2 PROACTIVEHOME $3 CREDENTIAL $4 BASECONFIG $5 DESTCONFIG
	cp -f "$4" "$5"
	chown "$PAUSER":"$PAGROUP" "$5"

	JAVAHOMEA=$(     echo "$1" | sed 's/(/\\\(/g' | sed 's/)/\\\)/g'| sed 's/\//\\\//g')
	PROACTIVEHOMEA=$(echo "$2" | sed 's/(/\\\(/g' | sed 's/)/\\\)/g'| sed 's/\//\\\//g')
	CREDENTIALA=$(   echo "$3" | sed 's/(/\\\(/g' | sed 's/)/\\\)/g'| sed 's/\//\\\//g')

	echo "JAVA_HOME is:      $JAVAHOMEA"
	echo "PROACTIVE_HOME is: $PROACTIVEHOMEA"
	echo "CREDENTIAL is:     $CREDENTIALA"

	sed -i \
            -e "s/JAVAHOMEXXX/$JAVAHOMEA/g" \
            -e "s/PROACTIVEHOMEXXX/$PROACTIVEHOMEA/g" \
            -e "s/CREDENTIALXXX/$CREDENTIALA/g" "$5" 
}

checkrmcred(){
	# $1 PROACTIVEHOME
	export CREDENTIAL=$(find $1 -name "rm.cred")
	assertnotempty "$CREDENTIAL" "ERROR: credential file not found (rm.cred)."
		
}

setupcurrdirperm(){
	# $1 CURRDIR 
	chown -R $PAUSER:$PAGROUP $CURRDIR/*
	chmod -R ug+rw $CURRDIR/..
}

set -e 

checkifroot

export CURRDIR="$(dirname $0)"
export CURRLINUXDIST="$(cat /etc/issue)"
export CURRUNAME="$(uname -a)"

echo "#### This script will configure and run the standalone version of the ProActive Agent for Linux."

echo "Current directory is:          $CURRDIR"
echo "Current Linux distribution is: $CURRLINUXDIST"
echo "Current uname is:              $CURRUNAME"

checkcurrdir $CURRDIR

echo "#### Checking if user $PAUSER is created, or create if needed..."
setupuser "$PAUSER" "$PAPASS" 

echo "#### Checking if group $PAGROUP is created, or create if needed..."
setupgroup "$PAGROUP" "$PAUSER" 

echo "#### Checking if JAVA_HOME is set..."
checkjava "$JAVA_HOME" 

echo "#### Downloading ProActive Scheduling Resourcing..."
echo "   Skipping this... ZIP file already in: $PROACTIVEZIP"

echo "#### Inflating ProActive Scheduling Resourcing..."
createdir "$CURRDIR/$DESTDIRSCHEDULING"
inflateandcheckproactive "$CURRDIR/$PROACTIVEZIP" "$CURRDIR/$DESTDIRSCHEDULING"

echo "#### Looking for Resource Manager credential..."
checkrmcred "$PROACTIVE_HOME"

echo "#### Setting up JAVA_HOME, PROACTIVE_HOME and CREDENTIAL tags in ProActive Agent file config.xml."
echo "   Using:"
echo "      JAVA_HOME        $JAVA_HOME"
echo "      PROACTIVE_HOME   $PROACTIVE_HOME"
echo "      CREDENTIAL       $CREDENTIAL"

assertnotempty "$JAVA_HOME"      "ERROR: environment variable JAVA_HOME not set."
assertnotempty "$PROACTIVE_HOME" "ERROR: environment variable PROACTIVE_HOME not set."
assertnotempty "$CREDENTIAL"     "ERROR: environment variable CREDENTIAL not set."

setupconfigxml "$JAVA_HOME" "$PROACTIVE_HOME" "$CREDENTIAL" "$CURRDIR/$CONFIGXMLBASE" "$CURRDIR/$CONFIGXMLOUT"

echo "#### Setting up permissions of the current directory..."
setupcurrdirperm "$CURRDIR"

echo "#### Starting the agent..."
sudo -u $PAUSER $CURRDIR/proactive-agent -v $CURRDIR/$CONFIGXMLOUT 

