#!/bin/sh                               
# paagent_server  This shell script takes care of starting and stopping
#                  the paagent_server                                  
#                                                                      
# chkconfig: 345 98 2                       
# description: Paagent server daemon           
#                                              
# processname: paagent_server                            
# config: /etc/paagent/server-log4cxx          
# pidfile: /var/run/paagent_server.pid         
#                                              
# https://fedoraproject.org/wiki/Packaging:SysVInitScript#Fedora_SysV_Initscripts

### BEGIN INIT INFO
# Provides:          paas
# Required-Start:    $remote_fs $syslog 
# Required-Stop:     $remote_fs $syslog 
# Default-Start:     3 4 5              
# Default-Stop:      0 1 6              
# Short-Description: Start ProActive Linux agent dbus daemon at boot time
# Description:       Enable service provided by ProActive Linux dbus agent.
### END INIT INFO                                                          

# source function library
. /etc/rc.d/init.d/functions

RETVAL=0

# Constants
PAAS_PRG="paagent_server"
PAAS_OPTS="-l /etc/paagent/server-log4cxx"
PAAS_LOCK=/var/lock/subsys/$PAAS_PRG      
PAAS_PID=/var/run/$PAAS_PRG.pid           
PAAS_EXEC=/usr/local/bin/$PAAS_PRG        
PAAS="$PAAS_EXEC $PAAS_OPTS"              
# Handle manual control parameters like start, stop, status, restart, etc.

start () {
    # Start daemons.
                    
    echo  $"Starting paagent server daemon: "
    if [ -f $PAAS_LOCK ]; then               
        echo_failure $"Server already running"
        echo                                  
    else
    daemon $PAAS&
    pidofproc $PAAS_PRG > $PAAS_PID
    RETVAL=$?
    if [ "$RETVAL" = 0 ]; then
        touch $PAAS_LOCK
        echo_success $"Paagent server start success"
        echo
    else
       rm -f $PAAS_LOCK
       echo_failure $"Error starting paagent server"
       echo
    fi
    fi
    return $RETVAL
}
stop () {
    # Stop daemons.
     echo -n $"Stopping $PRIVOXY_PRG: "
     killproc $PAAS_PRG && rm -f $PAAS_LOCK $PAAS_PID
     RETVAL=$?
     echo
     return $RETVAL
}
case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
        status $PAAS_PRG
        RETVAL=$?
    ;;
  restart)
    $0 stop
    $0 start
    ;;

  *)
    echo $"Usage: $0 {start|stop|status|restart}"
    exit 1
esac

exit 0
